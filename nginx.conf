# # For more information on configuration, see:
# #   * Official English Documentation: http://nginx.org/en/docs/
# #   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    # worker_connections 1024;
}

http {
    # Need to set DNS resolver explicitly? https://stackoverflow.com/a/50404532
    resolver 10.0.0.2 valid=10s;
    resolver_timeout 10s;

    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_certificate /etc/letsencrypt/live/maxrchung.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/maxrchung.com/privkey.pem;

    # Keeps websocket connection alive up to this long
    proxy_read_timeout 2h;

    # https://serversforhackers.com/c/redirect-http-to-https-nginx
    server {
        listen 80;
        server_name *.maxrchung.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name thrustin-server.maxrchung.com;
        # Make sure to not use location = / as that only captures root https://serverfault.com/a/701567
        location / {
            # Need to use variable so that we lookup DNS after service discovery changes: https://serverfault.com/a/593003
            set $backend containers-cloud-options.containers.internal;
            proxy_pass http://$backend:3012;
        }
    }

    server {
        listen 443 ssl;
        server_name functionalvote-server.maxrchung.com;
        location / {
            set $backend containers-cloud-options.containers.internal;
            proxy_pass http://$backend:4000;
        }
    }

    server {
        listen 443 ssl;
        server_name retro-server.maxrchung.com;
        location / {
            set $backend containers-cloud-options.containers.internal;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://$backend:5000;
        }
    }

    server {
        listen 443 ssl;
        server_name *.maxrchung.com;
        location / {
            return 404;
        }
    }
}


# http {
#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';

#     access_log  /var/log/nginx/access.log  main;

#     sendfile            on;
#     tcp_nopush          on;
#     tcp_nodelay         on;
#     keepalive_timeout   65;
#     types_hash_max_size 4096;

#     include             /etc/nginx/mime.types;
#     default_type        application/octet-stream;

#     # Load modular configuration files from the /etc/nginx/conf.d directory.
#     # See http://nginx.org/en/docs/ngx_core_module.html#include
#     # for more information.
#     include /etc/nginx/conf.d/*.conf;

#     server {
#         listen       80;
#         listen       [::]:80;
#         server_name  _;
#         root         /usr/share/nginx/html;

#         # Load configuration files for the default server block.
#         include /etc/nginx/default.d/*.conf;

#         error_page 404 /404.html;
#         location = /404.html {
#         }

#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#         }
#     }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

# }

